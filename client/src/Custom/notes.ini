<div className="card mb-3 " style={{ width: "900px" }}>
						<div className="card-body p-4">
							<div className="row">
								<div className="col-6 text-start ">
									Rate BASE ON FINANCIAL REPORT 2023
								</div>
								<div className="col-6 text-end ">(In Million Rp)</div>
							</div>
							<div className="row">
								<div
									className="col-12 text-center fw-bold"
									style={{ fontSize: "30px" }}
								>
									EXISTING
								</div>
							</div>
							<div className="row bg-opacity-50 bg-warning rounded-2 text-dark fw-bolder">
								<div className="col-3 ">COA Name</div>
								<div className="col-3">Balance</div>
								<div className="col-3">Rate</div>
								<div className="col-3">Interest Income</div>
							</div>
							<div className="row">
								<div className="col-3">Loan</div>
								<div className="col-3">
									Rp.{" "}
									{new Intl.NumberFormat().format(
										response.data.Data.loan.balance.toFixed(2)
									)}
								</div>
								<div className="col-3">
									{response.data.Data.loan.rate.toFixed(2)}%
								</div>
								<div className="col-3">
									Rp.{" "}
									{new Intl.NumberFormat().format(
										response.data.Data.loan.interest_income.toFixed(2)
									)}
								</div>
							</div>
							<div className="row">
								<div className="col-3">Placement Inter Office</div>
								<div className="col-3">
									Rp.{" "}
									{new Intl.NumberFormat().format(
										response.data.Data.pio.balance.toFixed(2)
									)}
								</div>
								<div className="col-3">
									{response.data.Data.pio.rate.toFixed(2)}%
								</div>
								<div className="col-3">
									Rp.{" "}
									{new Intl.NumberFormat().format(
										response.data.Data.pio.interest_income.toFixed(2)
									)}
								</div>
							</div>
							<div className="row bg-info bg-opacity-10 border border-info border-start-0 rounded">
								<div className="col-3"></div>
								<div className="col-3 fw-bold">
									Rp.{" "}
									{new Intl.NumberFormat().format(
										response.data.Data.total.balance.toFixed(2)
									)}
								</div>
								<div className="col-3"></div>
								<div className="col-3 fw-bold">
									Rp.{" "}
									{new Intl.NumberFormat().format(
										response.data.Data.total.interest_income.toFixed(2)
									)}
								</div>
							</div>
							<div className="row p-2"></div>
							<div className="row">
								<div className="col-3">Pendapatan Lainnya</div>
								<div className="col-3"></div>
								<div className="col-3"></div>
								<div className="col-3">
									Rp.{" "}
									{new Intl.NumberFormat().format(
										response.data.Data.other.interest_income.toFixed(2)
									)}
								</div>
							</div>
							<div className="row bg-info bg-opacity-10 border border-info border-start-0 rounded">
								<div className="col-3 fw-bold">Total Income</div>
								<div className="col-3"></div>
								<div className="col-3"></div>
								<div className="col-3 fw-bold">
									Rp.{" "}
									{new Intl.NumberFormat().format(
										response.data.Data.total_income.interest_income.toFixed(
											2
										)
									)}
								</div>
							</div>
							<div className="row p-2"></div>
							<div className="row bg-danger bg-opacity-10 border border-info border-start-0 rounded">
								<div className="col-3 fw-bold">Third-Party Funds</div>
								<div className="col-3"></div>
								<div className="col-3"></div>
								<div className="col-3 fw-bold">Interest Cost</div>
							</div>
							<div className="row">
								<div className="col-3">DPK</div>
								<div className="col-3">
									Rp.{" "}
									{new Intl.NumberFormat().format(
										response.data.Data.dpk.balance.toFixed(2)
									)}
								</div>
								<div className="col-3">
									{response.data.Data.dpk.rate.toFixed(2)}%
								</div>
								<div className="col-3">
									Rp.{" "}
									{new Intl.NumberFormat().format(
										response.data.Data.dpk.interest_income.toFixed(2)
									)}
								</div>
							</div>
							<div className="row">
								<div className="col-3">Borrowing Inter Office</div>
								<div className="col-3">
									Rp.{" "}
									{new Intl.NumberFormat().format(
										response.data.Data.bio.balance.toFixed(2)
									)}
								</div>
								<div className="col-3">
									{response.data.Data.bio.rate.toFixed(2)}%
								</div>
								<div className="col-3">
									Rp.{" "}
									{new Intl.NumberFormat().format(
										response.data.Data.bio.interest_income.toFixed(2)
									)}
								</div>
							</div>
							<div className="row bg-info bg-opacity-10 border border-info border-start-0 rounded">
								<div className="col-3"></div>
								<div className="col-3 fw-bold">
									Rp.{" "}
									{new Intl.NumberFormat().format(
										response.data.Data.total_interest.balance.toFixed(2)
									)}
								</div>
								<div className="col-3"></div>
								<div className="col-3 fw-bold">
									Rp.{" "}
									{new Intl.NumberFormat().format(
										response.data.Data.total_interest.interest_income.toFixed(2)
									)}
								</div>
							</div>
							<div className="row p-2"></div>
							<div className="row">
								<div className="col-3 bg-info bg-opacity-10 border border-info border-start-0 rounded fw-bold">
									NET INTEREST INCOME
								</div>
								<div className="col-3"></div>
								<div className="col-3"></div>
								<div className="col-3 fw-bold">
									Rp.{" "}
									{new Intl.NumberFormat().format(
										response.data.Data.net.interest_income.toFixed(2)
									)}
								</div>
							</div>
							<div className="row p-2"></div>
							<div className="row">
								<div className="col-3 bg-danger bg-opacity-10 border border-info border-start-0 rounded fw-bold">
									Operational COST :
								</div>
								<div className="col-3"></div>
								<div className="col-3"></div>
								<div className="col-3"></div>
							</div>
							<div className="row">
								<div className="col-3">1. Salary</div>
								<div className="col-3">
									Rp.{" "}
									{new Intl.NumberFormat().format(
										response.data.Data.salary.balance.toFixed(2)
									)}
								</div>
								<div className="col-3"></div>
								<div className="col-3 fw-bold"></div>
							</div>
							<div className="row">
								<div className="col-3">2. Rental cost of building</div>
								<div className="col-3">
									Rp.{" "}
									{new Intl.NumberFormat().format(
										response.data.Data.rental.balance.toFixed(2)
									)}
								</div>
								<div className="col-3"></div>
								<div className="col-3 fw-bold"></div>
							</div>
							<div className="row">
								<div className="col-3">3. Biaya CKPN</div>
								<div className="col-3">
									Rp.{" "}
									{new Intl.NumberFormat().format(
										response.data.Data.ckpn.balance.toFixed(2)
									)}
								</div>
								<div className="col-3">
									{response.data.Data.ckpn.rate.toFixed(2)}%
								</div>
								<div className="col-3 fw-bold"></div>
							</div>
							<div className="row">
								<div className="col-3">4. Operational Expenses</div>
								<div className="col-3">
									Rp.{" "}
									{new Intl.NumberFormat().format(
										response.data.Data.operational.balance.toFixed(2)
									)}
								</div>
								<div className="col-3"></div>
								<div className="col-3 fw-bold"></div>
							</div>
							<div className="row">
								<div className="col-3">5. Non Operational </div>
								<div className="col-3">
									Rp.{" "}
									{new Intl.NumberFormat().format(
										response.data.Data.non_operational.balance.toFixed(2)
									)}
								</div>
								<div className="col-3"></div>
								<div className="col-3 fw-bold"></div>
							</div>
							<div className="row bg-info bg-opacity-10 border border-info border-start-0 rounded">
								<div className="col-3"></div>
								<div className="col-3 fw-bold">
									Rp.{" "}
									{new Intl.NumberFormat().format(
										response.data.Data.total_op_cost.balance.toFixed(2)
									)}
								</div>
								<div className="col-3"></div>
								<div className="col-3 fw-bold">
									Rp.{" "}
									{new Intl.NumberFormat().format(
										response.data.Data.total_op_cost.interest_income.toFixed(
											2
										)
									)}
								</div>
							</div>
							<div className="row bg-info bg-opacity-10 border border-info border-start-0 rounded mt-2">
								<div className="col-3 fw-bold">Total Cost</div>
								<div className="col-3"></div>
								<div className="col-3"></div>
								<div className="col-3 fw-bold">
									Rp.{" "}
									{new Intl.NumberFormat().format(
										response.data.Data.total_cost.interest_income.toFixed(2)
									)}
								</div>
							</div>
							<div className="row p-2"></div>
							<div className="row bg-info bg-opacity-10 border border-info border-start-0 rounded">
								<div className="col-3 fw-bold">Profit and Loss</div>
								<div className="col-3"></div>
								<div className="col-3"></div>
								<div className="col-3 fw-bold">
									Rp.{" "}
									{new Intl.NumberFormat().format(
										response.data.Data.profit.interest_income.toFixed(2)
									)}
								</div>
							</div>
						</div>
					</div>




di aml bisa exclude kalau mau 1 saja yang mau di exclude

perperiode waktu tertentu 1 cf atas nama A akan ada alert





axios
				.get(
					linksso+"/api/get/scenario?year=" +
						startDate.getFullYear() +
						"&month=" +
						startDate.getMonth() +
						1 +
						"&loan_bal=" +
						lb +
						"&loan_rate=" +
						lr +
						"&pio_bal=" +
						piob +
						"&pio_rate=" +
						pior +
						"&dpk_bal=" +
						dpkb +
						"&dpk_rate=" +
						dpkr +
						"&bio_bal=" +
						biob +
						"&bio_rate=" +
						bior +
						"&ckpn_rate=" +
						ckpnr +
						"&branch=" +
						selBranch,

					{}
				)
				.then((response) => {
					// setShowsce(!showSce);
					setScedata(response.data);
					console.log(response);
				})
				.catch((error) => {
					console.log(error);
				});

				<table>
    <thead>
      <tr>
        <th>BEP Analisys</th>
      </tr>
	  <tr>
		<th>${selBranch}</th>
	  </tr>
	  <tr>
	  <th>Base On Financial Report 2023</th>
	</tr>
	<tr>
	  <th>Exixting</th>
	</tr>
	<tr>
	  <th>COA Name</th>
	  <th>Balance</th>
	  <th>Rate</th>
	  <th>Interest Income</th>

	</tr>
	<tr>
	  <th></th>
	  <th></th>
	  <th></th>
	  <th></th>

	</tr>
    </thead>
    <tbody>
      <tr>
        <td>Loan</td>
        <td>${sceData.Data.loan.balance}</td>
        <td>${sceData.Data.loan.rate}</td>
        <td>${sceData.Data.loan.interest_income}</td>

      </tr>
      <tr>
	  	<td>Placement Inter Office</td>
	  	<td>${sceData.Data.pio.balance}</td>
	  	<td>${sceData.Data.pio.rate}</td>
	  	<td>${sceData.Data.pio.interest_income}</td>
      </tr>
      <tr>
	  	<td></td>
	  	<td>${sceData.Data.total.balance}</td>
	  	<td></td>
	  	<td>${sceData.Data.total.interest_income}</td>
      </tr>
	  <tr>
	  	<td></td>
	  	<td>${sceData.Data.total.balance}</td>
	  	<td></td>
	  	<td>${sceData.Data.total.interest_income}</td>
      </tr>
	  <tr>
	  	<td>Pendapatan Lainnya</td>
	  	<td></td>
	  	<td></td>
	  	<td>${sceData.Data.other.interest_income}</td>
      </tr>
	  <tr>
	  	<td>Pendapatan Lainnya</td>
	  	<td></td>
	  	<td></td>
	  	<td>${sceData.Data.total_income.interest_income}</td>
      </tr>
	  <tr>
	  	<td></td>
	  	<td></td>
	  	<td></td>
	  	<td></td>
      </tr>
	  <tr>
	  	<td>Third-Party Funds</td>
	  	<td></td>
	  	<td></td>
	  	<td></td>
      </tr>
	  <tr>
	  	<td>DPK</td>
	  	<td>${sceData.Data.dpk.balance}</td>
	  	<td>${sceData.Data.dpk.rate}</td>
	  	<td>${sceData.Data.dpk.interest_income}</td>
      </tr>
	  <tr>
	  	<td>Borrowing Inter Office</td>
	  	<td>${sceData.Data.bio.balance}</td>
	  	<td>${sceData.Data.bio.rate}</td>
	  	<td>${sceData.Data.bio.interest_income}</td>
      </tr>
	  <tr>
	  	<td></td>
	  	<td>${sceData.Data.total_interest.balance}</td>
	  	<td></td>
	  	<td>${sceData.Data.total_interest.interest_income}</td>
      </tr>
	  <tr>
	  	<td></td>
	  	<td></td>
	  	<td></td>
	  	<td></td>
      </tr>
	  <tr>
	  	<td>NET INTEREST INCOME</td>
	  	<td></td>
	  	<td></td>
	  	<td>${sceData.Data.net.interest_income}</td>
      </tr>
	  <tr>
	  	<td></td>
	  	<td></td>
	  	<td></td>
	  	<td></td>
      </tr>
	  <tr>
	  	<td>OPERATIONAL COST :</td>
	  	<td></td>
	  	<td></td>
	  	<td></td>
      </tr>
	  <tr>
	  	<td>1. Salary</td>
	  	<td>${sceData.Data.salary.balance}</td>
	  	<td></td>
	  	<td></td>
  	  </tr>
		<tr>
		<td>2. Rental Cost Of Building</td>
		<td>${sceData.Data.rental.balance}</td>
		<td></td>
		<td></td>
	  </tr>
	  <tr>
		<td>3. Biaya CKPN</td>
		<td>${sceData.Data.ckpn.balance}</td>
		<td>${sceData.Data.ckpn.rate}</td>
		<td></td>
	  </tr>
	  <tr>
		<td>4. Operational Expenses</td>
		<td>${sceData.Data.operational.balance}</td>
		<td></td>
		<td></td>
	  </tr>
	  <tr>
		<td>5. Non Operational</td>
		<td>${sceData.Data.non_operational.balance}</td>
		<td></td>
		<td></td>
	  </tr>
	  <tr>
		<td></td>
		<td>${sceData.Data.total_op_cost.balance}</td>
		<td></td>
		<td>${sceData.Data.total_op_cost.interest_income}</td>
	  </tr>
	  <tr>
		<td>Total COST : </td>
		<td></td>
		<td></td>
		<td>${sceData.Data.total_cost.interest_income}</td>
	  </tr>
	  <tr>
		<td>Profit And Loss</td>
		<td></td>
		<td></td>
		<td>${sceData.Data.profit.interest_income}</td>
	  </tr>
    </tbody>
  </table>